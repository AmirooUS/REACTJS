{"ast":null,"code":"import _classCallCheck from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amirshekari/www/github/reactjs/src/Crud.js\";\nimport React, { Component } from 'react';\nimport products from './crud/products'; // Mimic DB\n\nlocalStorage.setItem('products', JSON.stringify(products));\n\nvar Crud =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Crud, _Component);\n\n  function Crud(props) {\n    var _this;\n\n    _classCallCheck(this, Crud);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Crud).call(this, props));\n    _this.state = {\n      title: 'Products Manager',\n      products: []\n    };\n    return _this;\n  }\n\n  _createClass(Crud, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"getProducts\",\n    value: function getProducts() {\n      var products = JSON.parse(localStorage.getItem('products'));\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"showProducts\",\n    value: function showProducts() {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, products.map(function (product, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, product.name, \", $\", product.price);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), this.state.products && this.showProducts());\n    }\n  }]);\n\n  return Crud;\n}(Component);\n\nexport default Crud;","map":{"version":3,"sources":["/Users/amirshekari/www/github/reactjs/src/Crud.js"],"names":["React","Component","products","localStorage","setItem","JSON","stringify","Crud","props","state","title","parse","getItem","setState","map","product","index","name","price","showProducts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB,C,CAAwC;;AAExCC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAjC;;IAEMK,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,kBADE;AAETR,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAHe;AAOlB;;;;yCAEoB,CAEpB;;;kCAEa;AACV,UAAMA,QAAQ,GAAGG,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACH;;;mCAEc;AACX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,QAAQ,CAACY,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,eAAoB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,OAAO,CAACE,IAAzB,SAAkCF,OAAO,CAACG,KAA1C,CAApB;AAAA,OAAb,CADL,CADJ;AAKH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWC,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGK,KAAKD,KAAL,CAAWP,QAAX,IAAuB,KAAKiB,YAAL,EAH5B,CADJ;AAOH;;;;EApCclB,S;;AAuCnB,eAAeM,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport products from './crud/products'; // Mimic DB\n\nlocalStorage.setItem('products', JSON.stringify(products));\n\nclass Crud extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: 'Products Manager',\n            products: []\n        };\n    }\n\n    componentWillMount() {\n\n    }\n\n    getProducts() {\n        const products = JSON.parse(localStorage.getItem('products'));\n        this.setState({products});\n    }\n\n    showProducts() {\n        return(\n            <ul>\n                {products.map((product, index) => <li key={index}>{product.name}, ${product.price}</li>)}\n            </ul>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.title}</h1>\n                <hr/>\n                {this.state.products && this.showProducts()}\n            </div>\n        );\n    }\n}\n\nexport default Crud;"]},"metadata":{},"sourceType":"module"}