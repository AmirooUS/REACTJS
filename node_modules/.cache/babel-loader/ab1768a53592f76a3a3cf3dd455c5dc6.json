{"ast":null,"code":"import _toConsumableArray from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/amirshekari/www/github/reactjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/amirshekari/www/github/reactjs/src/Crud.js\";\nimport React, { Component } from 'react';\nimport { products } from './crud/db'; // Mimic DB\n\nimport ReadProduct from './crud/ReadProduct';\nimport CreateProduct from './crud/CreateProduct'; // localStorage.setItem('products', JSON.stringify(products));\n\nvar Crud =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Crud, _Component);\n\n  function Crud(props) {\n    var _this;\n\n    _classCallCheck(this, Crud);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Crud).call(this, props));\n    _this.state = {\n      title: 'Products Manager',\n      products: JSON.parse(localStorage.getItem('products'))\n    };\n    _this.deleteProduct = _this.deleteProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createProduct = _this.createProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Crud, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      products && this.setProducts(products);\n      var products = this.getProducts();\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"getProducts\",\n    value: function getProducts() {\n      return this.state.products;\n    }\n  }, {\n    key: \"setProducts\",\n    value: function setProducts(products) {\n      localStorage.setItem('products', JSON.stringify(products));\n    }\n  }, {\n    key: \"showProducts\",\n    value: function showProducts() {\n      var _this2 = this;\n\n      var products = this.getProducts();\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, products.map(function (product, key) {\n        return React.createElement(ReadProduct, Object.assign({\n          key: key,\n          index: key\n        }, product, {\n          deleteProduct: _this2.deleteProduct,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      }));\n    }\n  }, {\n    key: \"deleteProduct\",\n    value: function deleteProduct(index) {\n      var currentProducts = this.getProducts();\n      var products = currentProducts.filter(function (product, i) {\n        return i !== index;\n      });\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"createProduct\",\n    value: function createProduct(product) {\n      var products = _toConsumableArray(this.getProducts()).concat([product]);\n\n      this.setState({\n        products: products\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(CreateProduct, {\n        createProduct: this.createProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), this.showProducts());\n    }\n  }]);\n\n  return Crud;\n}(Component);\n\nexport default Crud;","map":{"version":3,"sources":["/Users/amirshekari/www/github/reactjs/src/Crud.js"],"names":["React","Component","products","ReadProduct","CreateProduct","Crud","props","state","title","JSON","parse","localStorage","getItem","deleteProduct","bind","createProduct","setProducts","getProducts","setState","setItem","stringify","map","product","key","index","currentProducts","filter","i","showProducts"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB,C,CAAsC;;AAEtC,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B,C,CAEA;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,kBADE;AAETN,MAAAA,QAAQ,EAAEO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAFD,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AATe;AAUlB;;;;yCAEoB;AACjBZ,MAAAA,QAAQ,IAAI,KAAKc,WAAL,CAAiBd,QAAjB,CAAZ;AACA,UAAMA,QAAQ,GAAG,KAAKe,WAAL,EAAjB;AACA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAARA;AAAD,OAAd;AAEH;;;kCAEa;AACV,aAAO,KAAKK,KAAL,CAAWL,QAAlB;AACH;;;gCAEWA,Q,EAAU;AAClBS,MAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCV,IAAI,CAACW,SAAL,CAAelB,QAAf,CAAjC;AACH;;;mCAEc;AAAA;;AACX,UAAMA,QAAQ,GAAG,KAAKe,WAAL,EAAjB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,QAAQ,CAACmB,GAAT,CAAa,UAACC,OAAD,EAAUC,GAAV;AAAA,eACV,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,GAAlB;AAAuB,UAAA,KAAK,EAAEA;AAA9B,WAAuCD,OAAvC;AAAgD,UAAA,aAAa,EAAE,MAAI,CAACT,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADU;AAAA,OAAb,CADL,CADJ;AAOH;;;kCAEaW,K,EAAO;AACjB,UAAMC,eAAe,GAAG,KAAKR,WAAL,EAAxB;AACA,UAAMf,QAAQ,GAAGuB,eAAe,CAACC,MAAhB,CAAuB,UAACJ,OAAD,EAASK,CAAT;AAAA,eAAeA,CAAC,KAAKH,KAArB;AAAA,OAAvB,CAAjB;AACA,WAAKN,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACH;;;kCAEaoB,O,EAAS;AACnB,UAAMpB,QAAQ,sBAAO,KAAKe,WAAL,EAAP,UAA2BK,OAA3B,EAAd;;AACA,WAAKJ,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACH;;;6BAKQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKK,KAAL,CAAWC,KAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAKI,oBAAC,aAAD;AAAe,QAAA,aAAa,EAAE,KAAKO,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAQK,KAAKa,YAAL,EARL,CADJ;AAaH;;;;EApEc3B,S;;AAuEnB,eAAeI,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport { products } from './crud/db'; // Mimic DB\n\nimport ReadProduct from './crud/ReadProduct';\nimport CreateProduct from './crud/CreateProduct';\n\n// localStorage.setItem('products', JSON.stringify(products));\n\nclass Crud extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: 'Products Manager',\n            products: JSON.parse(localStorage.getItem('products'))\n        };\n\n        this.deleteProduct = this.deleteProduct.bind(this);\n        this.createProduct = this.createProduct.bind(this);\n    }\n\n    componentWillMount() {\n        products && this.setProducts(products);\n        const products = this.getProducts();\n        this.setState({products});\n\n    }\n\n    getProducts() {\n        return this.state.products;\n    }\n\n    setProducts(products) {\n        localStorage.setItem('products', JSON.stringify(products));\n    }\n\n    showProducts() {\n        const products = this.getProducts();\n        return(\n            <ul>\n                {products.map((product, key) =>\n                    <ReadProduct key={key} index={key} {...product} deleteProduct={this.deleteProduct}/>\n                )}\n            </ul>\n        )\n    }\n\n    deleteProduct(index) {\n        const currentProducts = this.getProducts();\n        const products = currentProducts.filter((product,i) => i !== index );\n        this.setState({products});\n    }\n\n    createProduct(product) {\n        const products = [...this.getProducts(), product];\n        this.setState({products});\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n\n                <h1>{this.state.title}</h1>\n                <hr/>\n\n                <CreateProduct createProduct={this.createProduct}/>\n                <hr/>\n\n                {this.showProducts()}\n\n            </div>\n        );\n    }\n}\n\nexport default Crud;"]},"metadata":{},"sourceType":"module"}